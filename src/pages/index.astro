---
import { Image } from "astro:assets";
import IndexLayout from "../layouts/IndexLayout.astro";
import ExperienceCard from "../components/ExperienceCard.astro";
import StickySection from "../components/StickySection.astro";
import Header from "../components/Header.astro";
import AnimatedLink from "../components/AnimatedLink.astro";
import CompanyCard from "../components/CompanyCard.astro";

import me from "../assets/images/me.jpg";
---

<IndexLayout title="SK ABDUL FAHEMID">
  <Header slot="header" />
  <Fragment slot="main">
    <StickySection sectionTitle="About" id="about">
      <div class="profile-pic-wrapper">
        <Image src={me} alt={"My picture"} />
      </div>
      <p>
        I have 9.5 yrs Experience as Senior Design and Verification Engineer
        with a demonstrated history of working in the semiconductors industry.
        Have a strong verification skill like constraints-based Environment
        testing and debugging, for successful ASIC and FPGA Development in
        SOC/IP Verification. Developed a Test-bench architecture and Plan for
        Agent/ Sequences/ Sequencer/ Driver/ Monitor and scoreboard using System
        Verilog language Framework using (UVM-Universal Verification
        Methodology). Verilog/HDL, VHDL, C, C++.
      </p>
      <p>
        I have extensive experience with various protocols such as AXI-3, AXI-4,
        I2C, I3C, SMBUS, AMBA-CHI5, PCIe, ETHERNET, SPI, APB, AHB, RISC-V. This
        diverse protocol exposure highlights his versatility in handling a wide
        range of projects and scenarios within the VLSI domain.
      </p>
      <p>
        I have Strong communication, interpersonal, and presentation skills. A
        skilled communicator, able to synthesize and deliver complex information
        to diverse audiences. Creative, flexible, able to adapt to changing
        priorities and maintain a positive attitude and strong work ethic. A
        track record for meeting timelines and exceeding expectations.
      </p>
    </StickySection>
    <StickySection sectionTitle="Experience" id="experience">
      <CompanyCard
        company="Tech mahindra Ltd"
        link="https://www.techmahindra.com"
      >
        <ExperienceCard
          start="FEB 2025"
          end="SEPT 2025"
          client="Intel"
          first={false}
          last={true}
          role="Project Lead"
          project="RISC-V SINGLE CORE NEORV-32"
          skills={[
            "Verilog",
            "System Verilog",
            "UVM",
            "GLS(Gate Level Of Simulation)",
            "Python",
            "Formal Verification",
            "C",
            "C++",
            "TCL",
            "Intercon(NOC)",
            "I2c",
            "Memory IP - HS4PRF",
          ]}
        >
          <ul class="pl-3 mb-0">
            <li>
              I have experience leading a team of 22 members, providing
              continuous support for debugging activities, distributing tasks
              among my team members, planning and executing testbenches (TB) ,
              as well as developing test plans. I implemented a RISC-V processor
              (NeoRV32) from scratch for a customized single-core design, which
              was later extended to a multi-core system for a client project,
              operating at a maximum clock frequency of 2 GHz to support the
              full-chip test flow.
            </li>
            <li>
              I created a testbench environment from scratch for a standard CPU
              core implementation. The design included an ALU with four
              co-processors : Bit-Manipulation , Multiply-Divide ( MulDiv ),
              Shifter , and Load-Store Unit ( LSU ). I also implemented
              functional coverage and achieved 100% coverage across all modules.
            </li>
            <li>
              I developed a comprehensive testbench plan and Implementation and
              created the UVM environment from scratch for 18 peripheral IPs ,
              utilizing dual monitors . These IPs were interconnected through an
              I/O switch (NoC) . I also individually implemented the
              Interconnect (Intercon) IP block , ensuring seamless integration
              and verification of the NoC interface.
            </li>
            <li>
              I created a TB Env for the Memory IP (HS4PRF) , and implemented it
              for the I-Memory (Imem), D-Memory (Dmem) ( RAM) , Bootloader (ROM)
              , and CPU register file , using verification _ wrapper.sv provided
              by Intel client. memory are integrated into the section gateway .
              I also developed the corresponding C code for these memory
              components to Compile it. converted them to SystemVerilog using
              DPI-C for seamless integration into the verification environment.
            </li>
            <li>
              Created a verification plan and TB ENV for Memory IP - HS4PRF ,
              and implemnted for Imem and Dmem and bootloder and cpu reg_file
              including using verification wrapper.sv on the memory side and
              integrated it into the section gateway to Implemented C .
            </li>
            <li>
              • Implemented C code for I-Memory (Imem), D-Memory (Dmem),
              Bootloader and CPU register interfaces to simulate memory behavior
              a integration into the hardware verification environment.
            </li>
            <li>
              Devlope the testbench environment for the On-Chip Debugger (OCD)
              to validate the Debugger module and JTAG interface , integrating
              the entire setup with the I/O switch to enable effective signal
              control and monitoring.
            </li>
            <li>
              I am currently working on subsystem integration for all
              Pheripheral and Memory IP blocks and the SoC full-chip model . I
              have also contributed to the implementation of assertion-based
              coverage for formal verification purposes.
            </li>
            <li>
              Python screpting are using Run regression along with written a
              written a script to generate a report pass and fail condition.
            </li>
            <li>
              Pheripheral and Memory Ip are integrated to soc level and
              implementation for SOC_TOP Env is done along with Functional
              covarage getting 100%.
            </li>
            <li>
              I have Exprienced on Formal Verification for soc level using
              JesperGold Tool.
            </li>
            <li>
              Working on GLS full Scratch, doing an complete set up and
              implentation. SDF using min and MAX value with Zero Delay.
            </li>
          </ul>
        </ExperienceCard>
        <ExperienceCard
          start="July 2024"
          end="FEB-2025"
          client="Intel"
          first={true}
          last={true}
          role="Project Lead"
          project="Sarnlink SLK_Mini_SOC"
          skills={[
            "Verilog",
            "System Verilog",
            "UVM",
            "GLS(Gate Level Of Simulation)",
            "Python",
            "Formal Verification",
            "C",
            "C++",
            "TCL",
          ]}
        >
          <ul class="pl-3 mb-0">
            <li>
              I have created a testbench environment and developed a test plan
              for the XSR Bridge , including the implementation of required
              sequences.
            </li>
            <li>
              Developed the connection between XSR Bridge to XSR Controller ,
              and written scoreboards to ensure data integrity and correct
              packet processing at a speed of 56Gbps .
            </li>
            <li>
              Worked on a SoC for Ethernet frame transfer , integrating multiple
              subsystems into a Mini SoC.
            </li>
            <li>
              Enabled communication across multiple peripherals within the SoC ,
              including SPI , AXI-4, I2C, Uart, IOSF.
            </li>
            <li>Implementation of GLS from scratch.</li>
            <li>
              Performed functional coverage analysis and contributed to
              debugging activities to ensure comprehensive verification.
            </li>
            <li>
              Implemented CCU register access sequences within the register
              configuration file, ensuring proper validation across all patterns
              in a 32-bit configuration .
            </li>
            <li>
              Additionally, I have designed and implemented the SPI peripheral
              block from scratch , enhancing the SoC's communication
              capabilities and broadening the processor’s interface options.
            </li>
          </ul>
        </ExperienceCard>
        <CompanyCard company="Wipro LTD" link="https://www.wipro.com/">
          <ExperienceCard
            start="NOV 2022"
            end="June 2024"
            client="NXP"
            first={true}
            last={true}
            role="Senior Verification lead L1"
            project="Mc-Lena Ethernet"
            skills={[
              "Verilog",
              "System Verilog",
              "UVM",
              "GLS(Gate Level Of Simulation)",
              "Python",
              "Formal Verification",
              "C",
              "C++",
            ]}
          >
            <ul class="pl-3 mb-0">
              <li>
                Successfully managed a team of 6 to 8 members , assigning tasks,
                tracking progress, and providing hands-on technical support for
                issue resolution and Individual contributer.
              </li>
              <li>
                Verified 800 Gbps - 400gbps for PHY and 400gps for MAC and
                100Base-T1 transceiver IPs with interfaces supporting SGMII/XMII
                PHY protocols .
                <li>
                  Implemented Complete TB Environment plan and Implemnted a test
                  case for SOC_MINI Block for Ethernet.
                </li>
              </li>
              <li>
                Written a logic for Error Senior test case. Updated and
                optimized UVM sequences as per the defined test plan , improving
                test case efficiency.
              </li>
              <li>
                Mc-Lena is intended for system that need external 400 Base -T1
                PHY.
              </li>
              <li>
                The product is built around Si-proven butterfly which is 100Base
                -T1 transceiver IP with Additional interface to support
                SGMII/XMII PHY Interface.
              </li>
              <li>Implementation of GLS from scratch using 0 delay.</li>
              <li>Debugging and fixed some failing tests.</li>
              <li>
                Perform Unit delay and timing delay gate level simulation for
                all required testcase with provided SDFs for SMGII, XMII and no-
                VIP, IP.
              </li>
              <li>Debugged Flop initialization issues and X propagation.</li>
              <li>
                Cache Coherency-memory is used to speed up and synchronize with
                a high-speed Memory CPU signal and fix the issue. L&
              </li>
            </ul>
          </ExperienceCard>
        </CompanyCard>
        <CompanyCard
          company="L&T Technology"
          link="https://www.larsentoubro.com/"
        >
          <ExperienceCard
            start="SEPT 2021"
            end="OCT 2022"
            client="Intel"
            last={true}
            role="Senior Verification Engineer"
            project="WHS-HALK"
            skills={[
              "S3M",
              "System Verilog",
              "Python Script",
              "UVM",
              "I2C",
              "SMBUS",
              "SPI",
              "I3C",
              "PCIe",
            ]}
          >
            <ul class="pl-3 mb-0">
              <li>
                Designed and developed a comprehensive UVM-based testbench
                environment for S3M using firmware-based verification.
              </li>
              <li>
                S3M is independent IP used for IBL soft memory used for initial
                integration.
              </li>
              <li>
                Created and executed detailed test plans for S3M bring-up in WHS
                arc-based C test development, ensuring functionality and
                coverage.
              </li>
              <li>
                Managed a team of 4 to 5 members , assigned tasks, and provided
                technical support for debugging and resolution of critical
                issues.
              </li>
              <li>
                Implemented and verified test cases for SMBus and SPI Flash
                intercommunication with the S3M interface. Developed tests to
                ensure correct data transactions for read and write operations
                over SMBus and SPI.
              </li>
              <li>
                Implementation of sequences and driver along with make a TB plan
                and explain to team members and helping for Debugging PCIe Gen4
                Transection Layer to Dll layer , specifically focusing on
                upstream and downstream configuration, power state transitions,
                and PHY register accesses
              </li>
              <li>Implementation for SMBUS testcase and debugging.</li>
              <li>
                Functional verification soc along with verifying
                intercommunication between the sub blocks.
              </li>
              <li>Implement a checker for SPI flash</li>
              <li>
                Set up the Gate-Level Simulation (GLS) environment from scratch
                to validate timing and functional correctness post-synthesis.
                X-propagation excluding incomplete test points and debugging
                test cases.
              </li>
              <li>I2C Debugging a Test Case.</li>
            </ul>
          </ExperienceCard>
          <ExperienceCard
            start="DEC 2020"
            end="AUG 2021"
            client="NXP"
            first={true}
            role="Senior Verification Engineer"
            project="Ethernet 800 G"
            skills={[
              "System Verilog",
              "Python Script",
              "UVM",
              "I2C",
              "Ethernet",
            ]}
          >
            <ul class="pl-3 mb-0">
              <li>Automatic FEC/CRC generation and monitoring/checking.</li>
              <li>
                Test case generation and checking (Directed, random and
                semi-random/constrained-random test cases).
              </li>
              <li>100G lane round robin is followed on byte basis.</li>
              <li>Round Robin scheme on packet basis for 800G traffic.</li>
              <li>Integration &Testing, Fixing the bug and updating.</li>
              <li>Implementation test case for scoreboard.</li>
            </ul>
          </ExperienceCard>
        </CompanyCard>
        <CompanyCard
          company="Alpha Numero pvt.ltd"
          link="https://alpha-numero.com/"
        >
          <ExperienceCard
            start="March 2019"
            end="NOV 2020"
            client="Boeing"
            last={true}
            role="Verification Engineer"
            project="DO-254,777-x"
            skills={[
              "System Verilog",
              "UVM",
              "Doors",
              "Regression",
              "VCD",
              "VPRD",
              "I2C",
              "IOSF",
              "ARINC-429",
              "CLDL",
              "AXI3",
              "Code Reviewer",
              "ADB",
              "IFDL",
            ]}
          >
            <ul class="pl-3 mb-0">
              <li>Development a scoreboard and Arbiter.</li>
              <li>
                Triggering Error or Fatal Error NVM throughDevelopment a
                scoreboard and Arbiter. VIP modification.
              </li>
              <li>Implantation testcase.</li>
              <li>Predictor and sequences development as per requirement.</li>
              <li>
                Develop Verification Test Case by reviewing requirement provided
                by client and file Problem Report.
              </li>
              <li>
                Verification of VHDL Design of client propriety interfaces used
                in design of PLDs.
              </li>
              <li>
                Maintain a documatation in a Doors for VCD and VPRD requirement.
              </li>
              <li>
                Worked on Code Coverage and modify the procedure to achieve
                required percentage of coverage.
              </li>
              <li>
                Review the Results of the Test and file the Problem Report for
                any conflicts found.
              </li>
              <li>Test Plan creation and finding a link Error updating.</li>
              <li>
                Review Lead of getting all the Test Procedure reviewed by
                Reviewer following the process mentioned under DO-254 standards
                Create prediction logic.
              </li>
            </ul>
          </ExperienceCard>
          <ExperienceCard
            start="NOV 2018"
            end="FEB 2019"
            client="Cadence"
            first={true}
            role="Verification Engineer"
            project="Analog Discovery with hip Bord, FPGA"
            skills={["System Verilog", "UVM", "Regression", "FPGA"]}
          >
            <ul class="pl-3 mb-0">
              <li>
                Developing test bench. Understanding the architecture and
                developing test scenarios according to the verification plan.
              </li>
              <li>
                To build the tb for driver, sequencer and monitor, sequences.
              </li>
              <li>
                The Analog Discovery and the hip board create a 3 test through
                wave from Air pump, water pump, and led.
              </li>
              <li>
                Functional coverage analyzes through the coverage report make a
                100 %.
              </li>
              <li>
                Debug high priority critical client issues for the project.
              </li>
              <li>
                The start digital discovery executing the project capturing the
                wave from different cycle time.
              </li>
              <li>
                Monitor debugs using developed test cases and report AHI report
                with wave from automated Generate.
              </li>
              <li>Validation process after completing the verification.</li>
            </ul>
          </ExperienceCard>
        </CompanyCard>

        <CompanyCard company="CSS CORP PVT.LTD" link="https://www.movate.com/">
          <ExperienceCard
            start="AUG 2017"
            end="July 2018"
            client="HoneyWell"
            last={true}
            role=" Verification Engineer"
            project="Wireless Monitor and Reciver"
            skills={["System Verilog", "UVM", "SOc", "AXI-3", "Perl"]}
          >
            <ul class="pl-3 mb-0">
              <li>
                As per the Requirement, preparing a verification plan, creates
                test-benches Environment.
              </li>
              <li>
                Understanding the architecture and developing test case
                scenarios according to the Blocks.
              </li>
              <li>
                Analyze a code coverage and create a “init file” exclusion the
                test case is not pass for 100 % coverage.
              </li>
              <li>To Build the test bench and writing the sequences.</li>
              <li>Implement a coverage and predictor as per a requirement.</li>
              <li>
                Designed and analyzed test bench environment and perform
                required modifications.
              </li>
              <li>
                Experience in system level and module / block level verification
                ARM based SOC.
              </li>
            </ul>
          </ExperienceCard>
          <ExperienceCard
            start="JAN 2017"
            end="July 2017"
            client="Cisco"
            role=" Verification Engineer"
            project="SG300-52p-28p"
            skills={["System Verilog", "UVM", "SOc", "AXI-3", "Perl", "SPI"]}
          >
            <ul class="pl-3 mb-0">
              <li>
                Understanding the architecture and developing test scenarios
                according to the verification plan.
              </li>
              <li>
                Write a Verification Environment generate a signal and stimulate
                through DUT.
              </li>
              <li>The consists of 3 different fields Header, data, FCS.</li>
              <li>
                DUT under the test Verification IP to a Signals and environment
                through the coverage.
              </li>
              <li>The simulation time Bed FCS and Good FCS Report Showing.</li>
              <li>
                The overall design, preparing a verification plan, creates
                test-benches, debug verification results.
              </li>
            </ul>
          </ExperienceCard>
          <ExperienceCard
            start="JAN 2016"
            end="June 2016"
            client="Truechip"
            role="Design Engineer"
            project="USB-3.0"
            skills={["Verilog", "HDL", "Codecovarage"]}
          >
            <ul class="pl-3 mb-0">
              <li>
                As per the client Requirement or Specification implement a
                design.
              </li>
              <li>Synthesis tools can detect RAM designs in the HDL code.</li>
              <li>
                The design unit dynamically switches between read and write
                operations
              </li>
              <li>Filling and fixing the verification bugs.</li>
              <li>Debugged and trace back issues using Sim-Vision tool.</li>
              <li>
                Assigned to create test cases to verify the BUS and Interrupts.
              </li>
            </ul>
          </ExperienceCard>
          <ExperienceCard
            start="JUNE 2015"
            end="DEC 2016"
            client="Feature Electronic"
            first={true}
            role="Design Engineer"
            project="DDR3"
            skills={["Verilog", "HDL", "Codecovarage"]}
          >
            <ul class="pl-3 mb-0">
              <li>
                As per the client Requirement or Specification implement a
                design.
              </li>
              <li>Synthesis tools can detect RAM designs in the HDL code.</li>
              <li>
                The design unit dynamically switches between read and writes
                operations.
              </li>
              <li>Filling and fixing the verification bugs.</li>
              <li>Debugged and trace back issues using Sim-Vision tool.</li>
              <li>
                Assigned to create test cases to verify the BUS and Interrupts.
              </li>
            </ul>
          </ExperienceCard>
        </CompanyCard>

        <AnimatedLink
          href="https://drive.google.com/file/d/1vwzSsA1zngq4vzTf_I4TK2Xm1yAsc5Aq/view?usp=sharing"
        >
          Check full Résumé
        </AnimatedLink>
      </CompanyCard>
    </StickySection>
    <p slot="footer">
      This site is built using <a
        href="https://astro.build/"
        target="_blank"
        class="inline-link interactable"
      >
        Astro
      </a>
      framework. Design is inspired by the amazing work of <a
        href="https://brittanychiang.com/"
        target="_blank"
        class="inline-link interactable"
      >
        Brittany Chiang
      </a>.
    </p>
  </Fragment>

  <style>
    .profile-pic-wrapper {
      display: flex;
      justify-content: center;
      height: 20rem;
    }

    .profile-pic-wrapper > img {
      border-radius: 20rem;
      height: 100%;
      width: auto;
      aspect-ratio: 1;
      object-fit: cover;
    }
  </style>
</IndexLayout>
